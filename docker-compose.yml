version: '3.1'

services:
  # Application Server running Ghost Headless CMS.
  ghost:
    image: ghost:5.54.2-alpine
    depends_on:
      - db
    container_name: my-ghost
    env_file:
      - ./example.env
    volumes:
      - ./ghost:/var/lib/ghost/content
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    networks:
      - backend
      - frontend

  # Database Server.
  db:
    image: mysql:8
    container_name: ghost_db
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    volumes:
      - ./db:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - "127.0.0.1:3306:3306" # Uncomment to access MySQL from outside the Docker network.
    networks:
      - backend

  # Powers the Reverse-Proxy Automatically.
  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./vhost:/etc/nginx/vhost.d
      - ./certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /usr/share/nginx/html
    depends_on:
      - ghost
    networks:
      - frontend
      - default
    restart: unless-stopped

  # Sources TLS Certificates Automatically.
  letsencrypt:
    image: nginxproxy/acme-companion:latest
    container_name: nginx-proxy-le
    environment:
      - DEFAULT_EMAIL=my@email.com
    volumes_from:
      - nginx-proxy
    volumes:
      - ./certs:/etc/nginx/certs:rw
      - ./nginx:/etc/nginx/conf.d
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge